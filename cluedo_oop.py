import random
from tkinter import *
from dropdown_menu import UserChoices

# ---------------------------------------------------------------------------- #


# create lists of rooms, suspects and weapons
rooms = ["kitchen", "ballroom", "hall", "bedroom"]
suspects = ["Mustard", "Peacock", "Trump", "Farage" ]
weapons = ["rope", "candlestick", "dagger", "sword"]
total_cards = rooms + suspects + weapons

# choose a random room, suspect and weapon to be the game answer.
game_answer = [random.choice(rooms),
               random.choice(suspects),
               random.choice(weapons)]

# remove the game answer from cards that get shuffled between players.
for i in range(len(game_answer)):
    total_cards.remove(game_answer[i])


random.shuffle(total_cards)
num_players = 2

# define global variables as the are needed in other functions
my_cards = total_cards[::num_players]
comp_cards = total_cards[1:len(total_cards):num_players]

cards_seen_player = []
cards_seen_comp = comp_cards.copy()

print(f"you have been dealt:    {my_cards}")
print(f"the computer has been dealt:   {comp_cards}")
print("-" * 50)

# ---------------------------------------------------------------------------- #

class Engine(object):

    def __init__(self, scene_map):
        self.scene_map = scene_map

    def play(self):
        current_scene = self.scene_map.opening_scene()
        last_scene = self.scene_map.next_scene('finished')

        while current_scene != last_scene:
            next_scene_name = current_scene.enter()
            current_scene = self.scene_map.next_scene(next_scene_name)

#  --------------------------------------------------------------------------  #
def dice_roll():
    """dice roll brings the player to a random room"""
    return random.choice(rooms)


def user_guess():
    """guess generated by the user, note the room has to be
    whatever room the dice roll has brought the user to."""

    root = Tk()
    app = UserChoices(root, dice_roll() ,my_cards, cards_seen_player)
    root.mainloop()

    tup = app.person()
    person, weapon = tup
    return person, weapon    # returns a tuple.


def comp_guess():
    """completely random guess generated by the computer"""
    person = random.choice(suspects)
    weapon = random.choice(weapons)
    return person, weapon


def user_guess_for_game(room):
    """user is guessing for the game. If your guess matches the
    game answer then you win the game, otherwise you lose.

    You room must be whatever room the dice roll has brought you to."""

    print("You are going for the game good luck!")
    print("so far you have seen: ", list(set(cards_seen_player)))

    # call user guess function that generates the user's guess.
    outcome = user_guess()
    final_guess = [room, outcome[0], outcome[1]]

    # print user guess and the game answer.
    print(f"you have guessed {final_guess}")
    print(f"the correct answer is {game_answer}")

    if final_guess == game_answer:
        print("You have won the game")

    else:
        print("You have lost to the computer")


def user_regular_guess(room):
    """regular guess for user, the computer shows a random
    card that it has from this guess"""

    print("you are going for a regular guess")
    print("so far you have seen: ", list(set(cards_seen_player)))

    # call user guess function that generates the user's guess.
    outcome = user_guess()
    reg_guess = [room, outcome[0], outcome[1]]

    # overlap between user guess and computers cards
    common = list(set(reg_guess).intersection(comp_cards))

    # show a random common card if one exists
    if len(common) == 0:
        print("computer has none of these cards")

    else:
        show = random.choice(common)
        print("the computer shows you: ", show)
        # add this card to the list of cards user has seen
        cards_seen_player.append(show)


def comp_guess_for_game(room):
    """computer is guessing for the game. If the computer's guess matches the
    game answer then the computer wins the game, otherwise it loses."""

    print("the computer is going for the game")
    outcome = comp_guess()

    final_guess = [room, outcome[0], outcome[1]]

    # print the computer's guess and the correct answer.
    print(f"the computer has guessed {final_guess}")
    print(f"the correct answer is {game_answer}")

    if final_guess == game_answer:
        print("the computer has guessed right and won the game")
    else:
        print("the computer has guessed wrong and you have won the game")


def comp_regular_guess(room):
    """a normal guess does not end the game but the other
    player shows a random card they have."""

    print("the computer is going for a regular guess")
    outcome = comp_guess()
    comp_guess1 = [room, outcome[0], outcome[1]]

    common = list(set(comp_guess1).intersection(my_cards))

    if len(common) == 0:
        print("player has no cards to show the computer")

    else:
        show = random.choice(common)
        print("player shows the computer: ", show)
        # add this card to the list of cards user has seen
        cards_seen_comp.append(show)

# ---------------------------------------------------------------------------- #

class UserTurn():
    def enter(self):
        """instructions for the user's turn"""

        your_room = dice_roll()
        print(f"Your roll has taken you to the {your_room}")
        # print(f"so far you have seen {cards_seen_player}")

        # user chooses if they would like to go for the game.
        goforit = input("Would you like to guess for the game? Y/N: ", )

        if goforit == "Y":
            user_guess_for_game(str(your_room)) # game ends
            return 'finished'

        elif goforit == "N":
            user_regular_guess(str(your_room))
            print("-" * 50)
            # game doesn't end and it's now the computers turn
            return 'comp_turn'


class CompTurn():
    def enter(self):
        """instuctions for the computers turn"""

        comp_room = dice_roll()
        print(f"the computers roll has takin it to the {comp_room}")

        # random variable to decide if the computer is going for the game
        num = (len(cards_seen_comp) / len(total_cards)) ** 5
        rand = random.uniform(0, 1)

        if num > rand:
            comp_guess_for_game(str(comp_room)) # game ends
            return 'finished'
        else:
            comp_regular_guess(str(comp_room))
            print("-" * 50)
            # game is not over and it's now the computers turn
            return 'user_turn'


# this class ensures the game ends.
class Finished():
    def enter(self):
        return 'finished'

# ---------------------------------------------------------------------------- #
class Map(object):
    scenes = {'user_turn': UserTurn(),
             'comp_turn': CompTurn(),
             #'user_reg_turn' : UserRegularGuess(),
             #'user_last_turn' : UserGuessForGame(),
             #'comp_reg_turn': CompRegularGuess(),
             #'comp_last_turn': CompGuessForGame(),
              'finished' : Finished()
              }

    def __init__(self, start_scene):
        self.start_scene = start_scene

    def next_scene(self, scene_name):
        val = Map.scenes.get(scene_name)
        return val

    def opening_scene(self):
        return self.next_scene(self.start_scene)


a_map = Map('user_turn')
a_game = Engine(a_map)
a_game.play()
